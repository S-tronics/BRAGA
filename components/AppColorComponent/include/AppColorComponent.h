/**********************************************************************************************************************/
/**
 * @file        AppColorComponent.h
 *
 * @author      Stijn Vermeersch
 * @date        05.07.2022
 *
 * @brief
 *
 *
 *
 * \n<hr>
 * Copyright (c) 2022, S-tronics BV\n
 * All rights reserved.
 * \n<hr>\n
 */
/**********************************************************************************************************************/
#ifndef AppColorComponent_H
#define AppColorComponent_H
/**********************************************************************************************************************/

/***********************************************************************************************************************
; I N C L U D E S
;---------------------------------------------------------------------------------------------------------------------*/

/**********************************************************************************************************************/

/***********************************************************************************************************************
; E X P O R T E D   S Y M B O L   D E F I N I T I O N S   A N D   M A C R O S
;---------------------------------------------------------------------------------------------------------------------*/
/**********************************************************************************************************************/
// Reference, currently set to 3500k white light:
// https://andi-siess.de/rgb-to-color-temperature/
// 3500K: (255, 196, 137),
#define kWhiteRedChannel 255
#define kWhiteGreenChannel 196
#define kWhiteBlueChannel 137
/***********************************************************************************************************************
; E X P O R T E D   T Y P E D E F S
;---------------------------------------------------------------------------------------------------------------------*/
/**********************************************************************************************************************/
typedef struct
{
    uint8_t red;
    uint8_t green;
    uint8_t blue;
} color_rgb_t;

typedef struct
{
    uint8_t white;
    uint8_t red;
    uint8_t green;
    uint8_t blue;
} color_rgbw_t;
/**********************************************************************************************************************/
typedef struct
{
    int kelvin;
    color_rgb_t color;
} kelvin_rgb_t;
/**********************************************************************************************************************/

/***********************************************************************************************************************
; E X P O R T E D   V A R I A B L E S
;---------------------------------------------------------------------------------------------------------------------*/
/**********************************************************************************************************************/

/**********************************************************************************************************************/
/**********************************************************************************************************************/
/***********************************************************************************************************************
; E X P O R T E D   F U N C T I O N   P R O T O T Y P E S
;---------------------------------------------------------------------------------------------------------------------*/
/**********************************************************************************************************************/
/**
 * @brief This function initializes the AppColorComponent
 *
 * @param
 * @return
 */

void AppColor_Init(void);
/**********************************************************************************************************************/
/**
 * @brief A function that expects 3 pointers to integers and cycles the color of the leds rainbow style.
 *
 * @param pRed The pointer to the red value of the led.
 * @param pGreen The pointer to the green value of the led.
 * @param pBlue The pointer to the blue value of the led.
 *
 */

void AppColor_rainbow_cycle(uint8_t *pRed, uint8_t *pGreen, uint8_t *pBlue);
/**********************************************************************************************************************/

/**
 * @brief
 *
 * @param rgb
 * @return color_rgbw_t
 */
color_rgbw_t AppColor_rgb_to_rgbw(color_rgb_t rgb);

/***********************************************************************************************************************
; E X P O R T E D   S T A T I C   I N L I N E   F U N C T I O N S
;---------------------------------------------------------------------------------------------------------------------*/
/**********************************************************************************************************************/

#endif /* AppColorComponent_H */